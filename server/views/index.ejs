<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real Time Tracking</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div id="github" class="flex flex-col items-center justify-center mt-2">
        <button class="bg-gray-500 text-white rounded border p-2 w-40" id="connect-btn">Connect to github</button>
        <button class="bg-gray-500 text-white rounded border p-2 w-40 mt-2" id="get-repos">GET REPO LIST</button>
        
    </div>
    <div>
        <form action="/deployments/new" class="flex flex-col items-center justify-center mt-2">
            <label for="name">Select name(live app will be available as name.deployt.com)</label>
            <input type="text" id="name" name="subdomain" class="bg-gray-200 rounded p-2 mt-2" placeholder="Enter the name   of the app">
            <label for="workdir">WORKDIR (all the commands will run inside this e.g app donot use '/')</label>

            <input type="text" id="workdir" name="workdir" class="bg-gray-200 rounded p-2 mt-2" placeholder="Enter the workdir">
            <label for="build-command"> BUILD COMMAND</label>
            <input type="text" id="build-command" name="build-command" class="bg-gray-200 rounded p-2 mt-2" placeholder="npm i">
            <label for="run-command"> RUN COMMAND</label>
            <input type="text" id="run-command" name="run-command" class="bg-gray-200 rounded p-2 mt-2" placeholder="node app.js">
            <label for="port"> PORT</label>
            <input type="text" id="port" name="port" class="bg-gray-200 rounded p-2 mt-2" placeholder="3000">
            <select name="tech-stacf" id="tech-stack">
                <option value="docker">Next JS</option>
                <option value="nodejs">NodeJS</option>
                <option value="python">Flask</option>
                <option value="java">Fast API</option>
                <option value="php" selected>auto</option>
            </select>
            <textarea name="env" id="env" placeholder="Enter env file"></textarea>
            <button type="submit" class="w-40 bg-blue-200 mt-2 rounded p-2">Deploy</button>
        </form>
        
    </div>cd 
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const btn = document.getElementById('connect-btn');
        btn.addEventListener('click', function () {
    const popup = window.open(
        '/user/auth/github',
        'popup'
    );

    const timer = setInterval(function () {
        if (popup.closed) {
            clearInterval(timer);
            
        }
    }, 500);
});
    
        const getReposBtn = document.getElementById('get-repos');
        getReposBtn.addEventListener('click', function() {
            fetch('/github/repos')
                .then(response => response.json())
                .then(data => {
                    
                    const repositories = data;
                    const dropdown = document.createElement('select');
                    dropdown.classList.add('bg-gray-200', 'rounded', 'p-2', 'mt-2');
                    dropdown.name = 'repoId';
                    repositories.forEach(repo => {
                        const option = document.createElement('option');
                        option.value = repo.id;
                        option.textContent = repo.name;
                        dropdown.appendChild(option);
                    });
    
                    const container = document.getElementById('github');
                    if (container) document.getElementsByTagName('form')[0].insertBefore(dropdown, document.getElementsByTagName('form')[0].firstChild);
                    else console.error("Element with ID 'github' not found.");
                })
                .catch(error => {
                    console.error('Error fetching repos:', error.message);
                });
        });
    });
</script>
</body>
</html>